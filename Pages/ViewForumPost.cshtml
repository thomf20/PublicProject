@page
@model PublicProject.Pages.ViewForumPostModel
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    var hasUsername = Model.ScopedData.UserProfiles.FirstOrDefault(n => n.UserId == user.Id);
}

    <html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>Agency - Start Bootstrap Theme</title>
        <!-- Favicon-->
         <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Font Awesome icons (free version)-
        <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
        <!-- Google fonts-->
       <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:400,100,300,700" rel="stylesheet" type="text/css" />
        <!-- Core theme CSS (includes Bootstrap)-->
       <link href="css/black/styles.css" rel="stylesheet" />
    <link href="css/CommentStyle/Comment.css" rel="stylesheet" />
    </head>
    

<div class="blog-content">
    <div class="blog-pop">
        <div class="container">
            <strong><img class="test" width="30px" height="30px" src="~/img/viewcount.png" /> @Model.ScopedData.blog.Popularity</strong>
        </div>
    </div>
</div>
@*Om koden inte funkar här så ska koden från rad 37 till 39 ner till rad 58.*@
@{
    var skribent = Model.ScopedData.UserProfiles.FirstOrDefault(x => x.UserId == Model.ScopedData.blog.UserId);
}
@if (SignInManager.IsSignedIn(User))
{
    @if (Model.ScopedData.blog.UserId == user.Id)
    {
        <a asp-page="/EditBlog" asp-route-id="@Model.ScopedData.blog.Id">Edit Blog</a>
    }
}


<!-- Masthead-->
<header class="masthead">
    <div class="container">
        <div class="masthead-heading text-uppercase">@Model.ScopedData.blog.Title</div>
        <img class="img-fluid" src="~/img/@Model.ScopedData.blog.Image" />
        <div class="masthead-subheading"> @Model.ScopedData.blog.Text</div>
    </div>
</header>

<!-- About-->
<section class="page-section" id="about">
    <div class="container">
        <div class="text-center">
         @*   @{
                var skribent = Model.ScopedData.UserProfiles.FirstOrDefault(x => x.UserId == Model.BlogPost.UserId);
            }*@
            @if(skribent != null)
            {
                <a asp-page="/SendmessageToUserView" asp-route-id="@skribent.UserId"><h3 class="section-heading text-uppercase">Skriven av @skribent.UserName </h3></a>
            }
            
            <h3 class="section-subheading text-muted">@Model.ScopedData.blog.Date</h3>
        </div>
    </div>
</section>
<!--Comment section-->
@{
    var comments = Model.ScopedData.Comments.Where(x => x.BlogId == Model.ScopedData.blog.Id);
}




@foreach(var sortedcomment in comments)
{
    <div class="comment">
        @{
            var image = Model.ScopedData.UserProfiles.FirstOrDefault(x => x.UserId == sortedcomment.UserId);
        }
        <div class="thumbnail">
            <img src="~/img/@image.Imglink" >
        </div>


            <h2 class="comment-content">@sortedcomment.Text</h2>
        <a class="comment" asp-page="/Sendmessagetouserview" asp-route-id="@sortedcomment.UserId">@sortedcomment.Author</a> | @sortedcomment.Date
        <div class="row">
                <div class="col-md-4">
                @if (SignInManager.IsSignedIn(User))
                {
                    <form method="post" asp-page-handler="Report">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <input asp-for="Report.reporterId" value="@user.Id" readonly class="form-control" type="hidden" />
                            <span asp-validation-for="Report.reporterId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input asp-for="Report.reportedId" value="@sortedcomment.UserId" readonly class="form-control" type="hidden" />
                            <span asp-validation-for="Report.reportedId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">

                                  
                                    <label asp-for="Report.Text" class="control-label">Anledning</label>
                                    <input asp-for="Report.Text" class="form-control" />
                                    <span asp-validation-for="Report.Text" class="text-danger"></span>

                                </div>
                            <div class="form-group">
                                <input asp-for="Report.CommentId" value="@sortedcomment.Id" type="hidden" readonly class="form-control" />
                                <span asp-validation-for="Report.CommentId" class="text-danger"></span>
                            </div>
                                <div class="col-md-6">
                                    <label>&nbsp;</label>
                                    <input type="submit" value="Report" class="btn btn-danger" />
                                </div>
                            </div>
                        </div>
                    </form>
                }
                </div>
            </div>
        </div>
    }


@{
    int commentId = Model.ScopedData.Comments.Count() + 1;    
}

@if (SignInManager.IsSignedIn(User))
{
    if(hasUsername != null)
    {
        <div class="comment-form">
            <h2>Kommentera foruminlägg</h2>
            <form method="post" asp-page-handler="SendComment">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input asp-for="Comment.Id" value="@commentId" class="form-control" readonly type="hidden" />
                    <span asp-validation-for="Comment.Id" class="text-danger"></span>
                </div>
                <div class="form-group">
                    @{
                        var commenter = Model.ScopedData.UserProfiles.FirstOrDefault(x => x.UserId == user.Id);
                        if (commenter?.UserName != null)
                        {
                            <input asp-for="Comment.Author" value="@commenter.UserName" class="form-control" readonly type="hidden" />
                            <span asp-validation-for="Comment.Author" class="text-danger"></span>
                        }
                    }
                </div>
                <div class="form-group">
                    <label asp-for="Comment.Text" class="control-label"></label>
                    <input asp-for="Comment.Text" class="form-control" />
                    <span asp-validation-for="Comment.Text" class="text-danger"></span>
                </div>


                <div class="form-group">
                    <input asp-for="Comment.Date" value="@DateTime.Now" class="form-control" readonly type="hidden" />
                    <span asp-validation-for="Comment.Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input asp-for="Comment.BlogId " value="@Model.ScopedData.blog.Id" class="form-control" readonly type="hidden" />
                    <span asp-validation-for="Comment.BlogId" class="text-danger"></span>


                    <div class="form-group">
                        <input asp-for="Comment.UserId" value=@user.Id readonly type="hidden" class="form-control" />
                        <span asp-validation-for="Comment.UserId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
            </form>
        </div>
    }
    else
    {
        <p style="color: red">Var vänlig och gå över till <a href="~/overview">UserProfile</a> för att registrera ett användarnamn för att börja blogga!</p>
    }
    
}





<!-- Footer-->
<footer class="footer py-4">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-4 text-lg-start">Copyright &copy; Public Project 2023</div>
            <div class="col-lg-4 text-lg-end">
                <a class="link-dark text-decoration-none me-3" href="#!">Privacy Policy</a>
                <a class="link-dark text-decoration-none" href="#!">Terms of Use</a>
            </div>
        </div>
    </div>
</footer>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
