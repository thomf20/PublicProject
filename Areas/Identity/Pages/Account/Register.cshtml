@page
@model RegisterModel
@{
    ViewData["Title"] = "Registrering";
}

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Skapa nytt konto.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Lösenord</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Bekräfta lösenord</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Registrera</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Här är ett autogenererat lösenord för dig, om du önskar. Använd uppdatera knappen om du vill ha ett nytt.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        @try{
                            <div>
                                <input type="text" id="textToCopy" value="@PublicProject.API.PasswordGeneratorAPI.GetRandomPassword().Result[0].Passwords" readonly>
                                <button type="button" onclick="copyToClipboard()">Kopiera</button>
                                <button id="refreshButton" onclick="refreshPage()">Uppdatera</button>
                            </div>
                        }
                        catch (AggregateException)
                        {
                            <br />
                            <p>Vi har problem med denna tjänst just nu, testa senare.</p>
                          
                        }
                        catch (HttpRequestException)
                        {
                            <br />
                            <p>Fungerar ej.</p>
                        }
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Logga in på ditt konto: @provider.DisplayName">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function refreshPage() {
            location.reload();
        }

        function copyToClipboard() {
            var text = document.getElementById("textToCopy").value;

            // Create a temporary input element
            var tempInput = document.createElement("input");
            tempInput.setAttribute("value", text);
            document.body.appendChild(tempInput);

            // Select the text in the input element
            tempInput.select();
            tempInput.setSelectionRange(0, 99999); // For mobile devices

            // Copy the text to the clipboard
            document.execCommand("copy");

            // Remove the temporary input element
            document.body.removeChild(tempInput);

            // Optionally, provide feedback to the user
            alert("Kopierad text: " + text);
        }

            document.getElementById("generatePasswordBtn").addEventListener("click", function () {
                var sliderValue = document.getElementById("slider").value;
                generatePassword(sliderValue);
            });

        function generatePassword(length) {
            // Make an API request to your endpoint
            fetch('/api/password?length=' + length)
                .then(response => response.json())
                .then(data => {
                    var passwordElement = document.getElementById("generatedPassword");
                    passwordElement.innerText = data.password;
                });
        }
    </script>


}
